{"version":3,"file":"static/js/787.adc1a954.chunk.js","mappings":"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","sources":["components/Sectio/Section.styled.jsx","components/Sectio/Section.jsx","components/helped/getNotificatin.js","redux/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactListt/ContactList.styled.jsx","components/ContactListt/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n    color: #008080;\n    text-align: center;\n    text-shadow: 2px 2px 5px white;\n    font-size: 30px;\n`;","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport function Section({ title, children }) {\n    return (\n        <section>\n            <Title>{title}</Title>\n            {children}\n        </section>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};","import Notiflix from \"notiflix\";\n\nexport const getNotification = message => {\n    Notiflix.Report.warning('Warning', message);\n};\n\nNotiflix.Report.init({\n    svgSize: '50px',\n    messageFontSize: '20px',\n    warning: {\n      svgColor: '#44728f',\n  \n      buttonBackground: '#44728f',\n      backOverlayColor: 'rgba(0,0, 0,0.2)',\n    },\n});","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  max-width: 350px;\n  margin: 0 auto;\n  border: 1px solid gray;\n  border-radius: 10px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 1px 1px 5px gray;\n  background: #008080;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 28px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n  gap: 5px;\n`;\n\nexport const FormInput = styled.input`\n  max-width: 300px;\n \n  height: 30px;\n  border-radius: 8px;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport const FormButton = styled.button`\n  margin: 0 auto;\n  border-radius: 8px;\n  padding: 5px 10px;\n  background: transparent;\n  color: white;\n\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #008080;\n  }\n`;\n\n\n\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\n\nimport { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\nimport { addContact } from 'redux/actions';\nimport { getContacts } from 'redux/selectors';\nimport { getNotification } from 'components/helped/getNotificatin';\n\n\nexport function ContactForm() {\n  const { contactsItem } = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target;\n    const { name, number } = form.elements;\n\n    const newContact = {\n      id: nanoid(),\n      name: name.value,\n      number: number.value,\n    };\n    if (contactsItem.some(contact => contact.name.toLowerCase() === name.value.toLowerCase())) {\n      getNotification(`${name.value} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я\\s]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?[0-9\\s\\-\\(\\)]+\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </Form>\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import styled from '@emotion/styled';\nimport { BiSolidTrash } from 'react-icons/bi';\n\nexport const ContactListStyled = styled.ul`\n  padding-left: 0;\n  max-width: 450px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 1048px) {\n    width: 450px;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 26px;\n  border: 1px solid gray;\n  border-radius: 10px;\n  box-shadow: 1px 1px 5px gray;\n  padding: 10px 20px;\n  margin-bottom: 10px;\n  background: linear-gradient(180deg, #b5b5b5, #599caa, #008080);\n`;\n\nexport const ContactData = styled.p`\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Span = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\nexport const ButtonDelete = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 5px;\n  border-radius: 8px;\n  height: 35px;\n  padding: 0 5px;\n  background: #008080;\n  color: white;\n\n  text-shadow: 5px 5px 10px black;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #2a7182;\n  }\n`;\n\nexport const DeleteSpan = styled.span`\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const ButtonIcon = styled(BiSolidTrash)`\n  fill: currentColor;\n`;\n\nexport const Text = styled.li`\n  display: block;\n  font-size: 28px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { BiSolidFace, BiSolidPhone } from 'react-icons/bi';\n\nimport { fetchContacts, deleteContact } from 'redux/actions';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { \n  ContactListStyled,\n  ContactItem,\n  ContactData,\n  ButtonDelete,\n  Span,\n  ButtonIcon,\n  Text,\n  DeleteSpan, } from './ContactList.styled';\n\n\n  export function ContactList() {\n    const filter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const { contactsItem, isLoading, error } = useSelector(getContacts);\n\n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const getFilterContact = () => {\n      const normalizedFilter = filter.toLowerCase().trim();\n      return contactsItem.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    };\n\n    const visibleContacts = getFilterContact();\n\n    return (\n      <ContactListStyled>\n        {isLoading && <p>Loading contacts...</p>}\n        {error && <p>{error}</p>}\n        {contactsItem.length > 0 ? (\n        visibleContacts.map(({ id, name, number }) => (\n          <ContactItem key={id}>\n            <ContactData>\n              <Span>\n                <BiSolidFace />\n                {name}:{' '}\n              </Span>\n              <Span>\n                <BiSolidPhone />\n                {number}\n              </Span>\n            </ContactData>\n            <ButtonDelete\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              <ButtonIcon /> <DeleteSpan>Delete</DeleteSpan>\n            </ButtonDelete>\n          </ContactItem>\n        ))\n      ) : (\n        <Text>Oops, contact list is empty. Add new contact</Text>\n      )}\n    </ContactListStyled>\n  );\n}\n\n\n\n\n\n\n","import styled from '@emotion/styled';\n\n\nexport const Container = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 26px;\n  align-items: center;\n`;\n\nexport const FilterInput = styled.input`\n  max-width: 300px;\n  width: 100%;\n  height: 30px;\n  font-size: 24px;\n  border-radius: 8px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { getFilter } from 'redux/selectors';\nimport { Container, FilterLabel, FilterInput } from './Filter.styled';\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Container>\n      <FilterLabel>\n        Find contact by name\n        <FilterInput type='text' onChange={onChangeFilter} value={filter} />\n      </FilterLabel>\n    </Container>\n  );\n}","import { useSelector } from \"react-redux\";\nimport { getContacts } from 'redux/selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactListt/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Section } from \"components/Sectio/Section\";\n\nconst Contacts = () => {\n    const { isLoading, error } = useSelector(getContacts);\n    return (\n      <>\n        <Section title={'Add new contact'}>\n          <ContactForm />\n        </Section>\n        {isLoading && !error && <b>Request in progress...</b>}\n        <Section title={'My contacts'}>\n          <Filter />\n          <ContactList />\n        </Section>\n      </>\n    );\n};\n  \nexport default Contacts;"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","title","children","_jsxs","_jsx","getNotification","message","Notiflix","svgSize","messageFontSize","warning","svgColor","buttonBackground","backOverlayColor","getContacts","state","contacts","getFilter","filter","Form","FormLabel","_templateObject2","FormInput","_templateObject3","FormButton","_templateObject4","ContactForm","contactsItem","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","form","target","_form$elements","elements","name","number","newContact","id","nanoid","value","some","contact","toLowerCase","concat","addContact","reset","type","pattern","required","ContactListStyled","ContactItem","ContactData","Span","ButtonDelete","_templateObject5","DeleteSpan","_templateObject6","ButtonIcon","BiSolidTrash","_templateObject7","Text","_templateObject8","ContactList","_useSelector","isLoading","error","useEffect","fetchContacts","visibleContacts","normalizedFilter","trim","includes","getFilterContact","length","map","_ref2","BiSolidFace","BiSolidPhone","onClick","deleteContact","Container","FilterLabel","FilterInput","Filter","onChange","event","setFilter","_Fragment"],"sourceRoot":""}