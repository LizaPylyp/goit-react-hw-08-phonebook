{"version":3,"file":"static/js/836.9d9badf3.chunk.js","mappings":"sLAEaA,E,QAAQC,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mH,SCCvB,SAASC,EAAOC,GAAuB,IAApBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAC7B,OACIC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACIE,EAAAA,EAAAA,KAACT,EAAK,CAAAO,SAAED,IACPC,IAGb,C,6ECRaG,EAAkB,SAAAC,GAC3BC,IAAAA,OAAAA,QAAwB,UAAWD,EACvC,EAEAC,IAAAA,OAAAA,KAAqB,CACjBC,QAAS,OACTC,gBAAiB,OACjBC,QAAS,CACPC,SAAU,UAEVC,iBAAkB,UAClBC,iBAAkB,qB,uHCXXC,EAAOlB,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4SAgBlBiB,EAAQnB,EAAAA,EAAAA,MAAYoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,2HAQpBmB,EAAQrB,EAAAA,EAAAA,MAAYsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,6GAQpBqB,EAASvB,EAAAA,EAAAA,OAAawB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,qN,4BC5BtBuB,EAAe,WAAO,IAADC,EAAAC,EACxBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAwB1B,OACEzB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAACW,EAAI,CAACe,SAxBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfC,EAAkCF,EAAKG,SAA/BC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAEjBA,EAASC,MAAMC,OAAS,GAC1BnC,EAAAA,EAAAA,GAAgB,4DAMlBmB,GACEiB,EAAAA,EAAAA,IAAS,CACPL,KAAMA,EAAKG,MACXF,MAAOA,EAAME,MACbD,SAAUA,EAASC,SAGvBP,EAAKU,QACP,EAIiCxC,SAAA,EAC3BC,EAAAA,EAAAA,MAACY,EAAK,CAAAb,SAAA,CAAC,QAELE,EAAAA,EAAAA,KAACa,EAAK,CAAC0B,KAAK,OAAOP,KAAK,OAAOQ,IAAI,UAErCzC,EAAAA,EAAAA,MAACY,EAAK,CAAAb,SAAA,CAAC,UAELE,EAAAA,EAAAA,KAACa,EAAK,CAAC0B,KAAK,OAAOP,KAAK,cAE1BjC,EAAAA,EAAAA,MAACY,EAAK,CAAAb,SAAA,CAAC,YAELE,EAAAA,EAAAA,KAACa,EAAK,CAAC0B,KAAK,WAAWP,KAAK,iBAE9BhC,EAAAA,EAAAA,KAACe,EAAM,CAACwB,KAAK,SAAQzC,SAAC,gBAElB,OAALwB,QAAK,IAALA,GAAe,QAAVJ,EAALI,EAAOmB,gBAAQ,IAAAvB,GAAM,QAANC,EAAfD,EAAiBwB,YAAI,IAAAvB,OAAhB,EAALA,EAAuBa,QACtB/B,EAAAA,EAAAA,GAAgB,sCAG1B,E,UC1CA,EARiB,WACb,OACED,EAAAA,EAAAA,KAACL,EAAAA,EAAO,CAACE,MAAO,WAAWC,UACzBE,EAAAA,EAAAA,KAACiB,EAAY,KAGrB,C","sources":["components/Sectio/Section.styled.jsx","components/Sectio/Section.jsx","components/helped/getNotificatin.js","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n    color: #008080;\n    text-align: center;\n    text-shadow: 2px 2px 5px white;\n    font-size: 30px;\n`;","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nexport function Section({ title, children }) {\n    return (\n        <section>\n            <Title>{title}</Title>\n            {children}\n        </section>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};","import Notiflix from \"notiflix\";\n\nexport const getNotification = message => {\n    Notiflix.Report.warning('Warning', message);\n};\n\nNotiflix.Report.init({\n    svgSize: '50px',\n    messageFontSize: '20px',\n    warning: {\n      svgColor: '#44728f',\n  \n      buttonBackground: '#44728f',\n      backOverlayColor: 'rgba(0,0, 0,0.2)',\n    },\n});","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 300px;\n  margin: 0 auto;\n  padding: 10px;\n  border: 1px solid gray;\n  border-radius: 10px;\n  padding: 20px;\n  display: flex;\n  gap: 10px;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  box-shadow: 1px 1px 5px gray;\n  background: #008080;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  max-width: 300px;\n  height: 30px;\n  border-radius: 8px;\n  font-size: 16px;\n  padding: 10px;\n`;\n\nexport const Button = styled.button`\n  margin: 0 auto;\n  border-radius: 8px;\n  padding: 5px 10px;\n  background: #008080;\n  color: white;\n  font-size: 18px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    background: #008080;\n  }\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport { Form, Label, Input, Button } from './RegisterForm.styled';\nimport { getError } from 'redux/auth/auth-selectors';\nimport { getNotification } from 'components/helped/getNotificatin';\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n    const error = useSelector(getError);\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      const form = e.currentTarget;\n      const { name, email, password } = form.elements;\n  \n      if (password.value.length < 7) {\n        getNotification(\n          `The password must be composed of at least 7 characters.`\n        );\n        return;\n      }\n  \n      dispatch(\n        register({\n          name: name.value,\n          email: email.value,\n          password: password.value,\n        })\n      );\n      form.reset();\n    };\n  \n    return (\n      <div>\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            Name\n            <Input type=\"text\" name=\"name\" min=\"6\" />\n          </Label>\n          <Label>\n            E-mail\n            <Input type=\"text\" name=\"email\" />\n          </Label>\n          <Label>\n            Password\n            <Input type=\"password\" name=\"password\" />\n          </Label>\n          <Button type=\"submit\">Sign up</Button>\n        </Form>\n        {error?.response?.data?.name &&\n          getNotification('This email is already registered')}\n      </div>\n    );\n};","import { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport { Section } from 'components/Sectio/Section';\n\nconst Register = () => {\n    return (\n      <Section title={'Register'}>\n        <RegisterForm />\n      </Section>\n    );\n};\n  \nexport default Register;"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","title","children","_jsxs","_jsx","getNotification","message","Notiflix","svgSize","messageFontSize","warning","svgColor","buttonBackground","backOverlayColor","Form","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","RegisterForm","_error$response","_error$response$data","dispatch","useDispatch","error","useSelector","getError","onSubmit","e","preventDefault","form","currentTarget","_form$elements","elements","name","email","password","value","length","register","reset","type","min","response","data"],"sourceRoot":""}